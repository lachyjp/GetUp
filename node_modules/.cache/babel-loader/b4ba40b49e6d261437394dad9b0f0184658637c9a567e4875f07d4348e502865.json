{"ast":null,"code":"import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport { progressEventReducer } from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {\n      responseType,\n      onUploadProgress,\n      onDownloadProgress\n    } = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n    let request = new XMLHttpRequest();\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from('getAllResponseHeaders' in request && request.getAllResponseHeaders());\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError(event) {\n      // Browsers deliver a ProgressEvent in XHR onerror\n      // (message may be empty; when present, surface it)\n      // See https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/error_event\n      const msg = event && event.message ? event.message : 'Network Error';\n      const err = new AxiosError(msg, AxiosError.ERR_NETWORK, config, request);\n      // attach the underlying event for consumers who want details\n      err.event = event || null;\n      reject(err);\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);\n      request.upload.addEventListener('progress', uploadThrottled);\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n    const protocol = parseProtocol(_config.url);\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};","map":{"version":3,"names":["utils","settle","transitionalDefaults","AxiosError","CanceledError","parseProtocol","platform","AxiosHeaders","progressEventReducer","resolveConfig","isXHRAdapterSupported","XMLHttpRequest","config","Promise","dispatchXhrRequest","resolve","reject","_config","requestData","data","requestHeaders","from","headers","normalize","responseType","onUploadProgress","onDownloadProgress","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","done","cancelToken","unsubscribe","signal","removeEventListener","request","open","method","toUpperCase","url","timeout","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","response","status","statusText","_resolve","value","_reject","err","onreadystatechange","handleLoad","readyState","responseURL","indexOf","setTimeout","onabort","handleAbort","ECONNABORTED","onerror","handleError","event","msg","message","ERR_NETWORK","ontimeout","handleTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","undefined","setContentType","forEach","toJSON","setRequestHeader","val","key","isUndefined","withCredentials","addEventListener","upload","cancel","type","abort","subscribe","aborted","protocol","protocols","ERR_BAD_REQUEST","send"],"sources":["C:/Users/inbox/My Files/GitHub/GetUp/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n  request.onerror = function handleError(event) {\n       // Browsers deliver a ProgressEvent in XHR onerror\n       // (message may be empty; when present, surface it)\n       // See https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/error_event\n       const msg = event && event.message ? event.message : 'Network Error';\n       const err = new AxiosError(msg, AxiosError.ERR_NETWORK, config, request);\n       // attach the underlying event for consumers who want details\n       err.event = event || null;\n       reject(err);\n       request = null;\n    };\n    \n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}